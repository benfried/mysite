[
  {
    "objectID": "reviews/20220922onreviews.html",
    "href": "reviews/20220922onreviews.html",
    "title": "Reviews and Reviewing",
    "section": "",
    "text": "What makes a meaningful review?\nI may be deeply unenlightened, but for me, art is something that produces an emotional reaction, and the purpose of writing about it is to memorialize and elucidate that reaction, and delve into why the viewer had that reaction.\nThat's what motivates me more than anything: a desire to record how something I experienced made me feel. There's something about the power of the memory of an emotion that reaches past the psyche and into a more primitive place, or maybe it's the child-brain we all bury. I feel (ha) that I can be more exact about what that feeling is, and where its power comes from, in the written word, and that will make for a better referral for friends or just a reminder of my own experience.\nAnd once I have those feelings down, it seems like the writing would be incomplete without going into how the work did what it did to me. Why did I feel that way? Why was it that the thing it did that made me feel that way had that effect? Why to that? And so on with the five whys.\n\"Reviews\" (if that's even the right word) are only meaningful if they start with that personal perspective.\nA friend, who went on to become a muckity-muck in the art world, but at the time was a budding journalism student, once told me that \"art is anything that makes you think.\" He loved to say outrageous things, and maybe this was one of them, but now, 30 years after he first said it to me, I am more accepting of his definition than I was at the time."
  },
  {
    "objectID": "nyff2022.html",
    "href": "nyff2022.html",
    "title": "Ben Fried",
    "section": "",
    "text": "See it\n\n\nDrama\n\n\nBiographical Drama\n\n\nUS\n\n\n\n\nThe Story of the two NY Times reporters who broke the Harvey Weinstein story and helped start #metoo\n\n\n\n\n\n\nOct 13, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nSee it\n\n\nDrama\n\n\nBiographical Drama\n\n\nUS\n\n\n\n\nThe story of a sixth grade boy in Queens in the fall of 1980.\n\n\n\n\n\n\nOct 12, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nSee it\n\n\nDrama\n\n\nCrime\n\n\nMystery\n\n\nNoir\n\n\nSouth Korea\n\n\n\n\nPark Chan-wook’s detective / femme fatale story\n\n\n\n\n\n\nOct 9, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nDocumentary\n\n\nUS\n\n\n\n\nLaura Poitras’ documentary on Nan Goldin and the fight against the Sacklers\n\n\n\n\n\n\nOct 8, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nSkip it\n\n\nDrama\n\n\nHorror\n\n\nUS\n\n\n\n\nYoung Cannibals on the Road\n\n\n\n\n\n\nOct 7, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nMaybe See it\n\n\nDrama\n\n\nRomance\n\n\nThriller\n\n\nUS and France\n\n\n\n\nIn Nicaragua, a down-on-her-luck journalist connects with a business man who may not be what he seems.\n\n\n\n\n\n\nOct 2, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nDark Comedy\n\n\nSatire\n\n\nComedy\n\n\n\n\nA cruise for the super-rich goes horribly wrong.\n\n\n\n\n\n\nOct 1, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nHistorical Drama\n\n\nUS\n\n\n\n\nThe true story of Mamie Till Mobley’s pursuit of justice for her son Emmett.\n\n\n\n\n\n\nOct 1, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nDrama\n\n\nSuspense\n\n\nUS\n\n\n\n\nPaul Schrader’s story of an unusual horticulturalist\n\n\n\n\n\n\nOct 1, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nDrama\n\n\nUS\n\n\nSee it\n\n\n\n\nOpening Night: Noah Baumbach’s adaptation of the Don DeLillo novel\n\n\n\n\n\n\nSep 30, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "2022-08-27.Workflow.html",
    "href": "2022-08-27.Workflow.html",
    "title": "My workflow for this site",
    "section": "",
    "text": "Authoring\nI write in org, mostly. While there are times that an outline is not the right scaffolding, those times are rare, and I have come to accept, over the years, that if I can't lay out an outline of what I want to think, it may be because I haven't really thought things through.\nNotebooks are great for literate programming, but I was not willing to do pure writing in Jupyter notebooks (if I had been, I could have done this all with only nbdev, which would have made a number of things easy). Literate programming is useful when you want your code to have well-written documentation, but if there's not going to be any code, the editing capabilities of Jupyter+chrome or Jupyter+vscode, using straight markdown, are, well, pretty weak in comparison to emacs.\nI've been using GNU Emacs since 1984 or so; I know it really well, and for editing, it feels like it's built into my fingers. Especially with org mode, which makes navigation, manipulating structure, and lightweight formatting joyfully easy.\nIt helps that I'm comfortable mucking around in emacs lisp as needed to make it do what I want. Honestly, sometimes the mucking around in emacs lisp is the most fun.\n\n\nEmacs hacks\nI ended up doing some emacs hacking to make good-looking markdown files out of org files.\nMy first observation is that Org's default markdown exporter is, well, crap. You can find a number of alternatives, but I quickly discovered that pandoc does a really outstanding job, at least for the org files I've been writing. Note that I haven't yet used org tables, or the org-babel literate programming features, or dozens of other amazing features in org mode, which might be harder for pandoc to deal with.\nHowever, it turns out that by default, pandoc does not pull the #+title info from the org file to populate the markdown frontmatter, which is supposed to look like:\n---\ntitle: a document\n---\nBut, because, of course it does, pandoc has a templating system, and fixing markdown output to create properly formatted frontmatter was a matter of making a custom markdown template with a small change from default. Honestly, I'm not sure why the default behavior is not a bug, but it's easy to specify a local template.\nQuarto can run scripts before or after your site is rendered, and I'd initially thought that would run whenever an org file was updated in the content tree. But it turns out that the quarto change watcher only looks for changes to or additions of its native file types (.md, .qmd, etc). (I did find another use for pre-render scripts, which I'll share in a minute.)\nSo instead, I wrote a function that gets called whenever an org file is saved. It figures out if the org file is part of a quarto site, and if it is, it runs pandoc, using the appropriate template, to generate a markdown file. I've included it below. I'll put it up in github, perhaps in a separate repo, because others might find it useful. Some might not like that the .org \"source\" files are in the same directory as the output markdown files, but that doesn't bother me.\nThis is nice because when quarto is run locally in preview mode, it watches the site directory, and re-renders the site whenever a new markdown file is added, or an existing one is changed. Your browser just reloads with the new contant, like magic.\nNote to self: should I be worried about the public image that comes from publishing emacs lisp code? This is not a new hotness, like Rust or Typescript.\n\n\nHere's the emacs lisp code\n\n;;; below should perhaps go in a separate libary, but whatever.\n;;; an after-save-hook that uses pandoc to make a markdown version of org files after save.\n;;; It uses a template I created that preserves the title in a format that quarto likes\n(defcustom pandoc-binary \"pandoc\" \"Location of pandoc binary\"\n  :type 'string)\n\n(defcustom markdown-template (expand-file-name \"~/lib/pandoc-org-template\")\n  \"Location of custom pandoc markdown template\"\n  :type 'string)\n\n(defcustom always-convert-org-to-md nil\n  \"If non-nil, auto-markdown-after-save will convert the org file to md regardless of\nwhether or not there is a _quarto.yml file in the current directory\"\n  :type 'boolean)\n\n(defun auto-markdown-after-save ()\n  \"Use Pandoc to auto-convert an org file to markdown every time it's saved; \nSet `after-save-hook` in org mode to this value if you use quarto with org\"\n  (interactive)\n  (when (and (eq major-mode 'org-mode)\n         (or always-convert-org-to-md (file-exists-p \"_quarto.yml\")))\n    (let* ((errbuf (get-buffer-create \"*Pandoc Errors*\"))\n       (ofile (concat (file-name-sans-extension (buffer-file-name)) \".md\")))\n      (message \"converting org file to markdown...\")\n      (call-process pandoc-binary nil errbuf nil\n            \"-s\"\n            \"-o\"\n            ofile\n            (buffer-file-name))\n      (message \"converting org file to markdown...done\"))))\n\n\n\nOther bits of the authoring workflow\nI really like the left-hand-side site navigation tree that quarto displays, but it would appear that it's not generated automatically, it has to be manually created. There's a yml format for this and other site metadata.\nI wrote a prerender script (remmeber those, from a few paragraphs ago?).\n\n\nPrerender script\nDon't judge. This does not have robust error handling, and has a bunch of other sharp edges. That's OK. The author is the only customer, and he forgives himself in advance for any shortcomings.\n\n#!/usr/bin/env python\n\nimport os, sys\nfrom pathlib import Path\n\ntocfile = 'sidebar.yml'\nnewtocfile = tocfile + '.new'\nbackuptocfile = tocfile + '.orig'\n\ndef createtocfromdir(dir, indentlevel):\n    retval = ''\n    path = Path(dir)\n    for p in sorted(path.iterdir()):\n        if p.name[0] == '.' or p.name[0] == '_':\n            pass\n        elif p.suffix == \".md\":\n            retval += ' ' * indentlevel + '- ' + (str(p)) + '\\n'\n        elif p.is_dir():\n            retval += ' ' * indentlevel + '- section: ' + (str(p)) + '\\n'\n            retval += ' ' * (indentlevel+2) + 'contents:' + '\\n'\n            retval += createtocfromdir(p, indentlevel+2)\n        else:\n            pass\n    return retval\n\ntocbody = createtocfromdir(\".\", 6)\n\nif len(tocbody) < 4:\n    print(\"exiting\")\n    sys.exit()\n\nwith open(newtocfile, \"w\") as f:\n    print(\"website:\",file=f)\n    print(\"  sidebar:\", file=f)\n    print(\"    contents:\", file=f)\n    print(createtocfromdir(\".\", 6), file=f)\n\nos.rename(tocfile, backuptocfile)\nos.rename(newtocfile, tocfile)\n\n\n\nFile order\nFile names appear in lexicographic order in the quarto table of contents, so I prefix file names with a number as a way of manually setting the ordering; right now I'm using YYYYMMDDfile.org, based on the thought that I'm trying to do something a bit bloggish, or at least chronologically sequential.\nnbdev recommends its users just use two-digit numerics as prefixes for setting file order. If I end up writing things that are more like articles than journal entries, I will try that."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hi, it’s Ben.",
    "section": "",
    "text": "Lately I’ve been trying to write down my reactions to the movies I saw at the New York Film Festival. I’m already way behind — I made it to 17 movies over two weeks — but I’m trying to both process my feelings about the movies and turn that into notes here.\nThis whole thing is a big personal experiment, so expect it to change."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is a site, like any other. Only more so."
  },
  {
    "objectID": "nyff2022/2022-10-12.armageddon-time/armageddon-time.html",
    "href": "nyff2022/2022-10-12.armageddon-time/armageddon-time.html",
    "title": "Armageddon Time",
    "section": "",
    "text": "Anne Hathaway, Jeremy Strong, and James Gray"
  },
  {
    "objectID": "nyff2022/2022-10-02.stars-at-noon/stars-at-noon.html",
    "href": "nyff2022/2022-10-02.stars-at-noon/stars-at-noon.html",
    "title": "Stars at Noon",
    "section": "",
    "text": "Some of the stars of the film"
  },
  {
    "objectID": "nyff2022/2022-10-13.she-said/she-said.html",
    "href": "nyff2022/2022-10-13.she-said/she-said.html",
    "title": "She Said",
    "section": "",
    "text": "Jodi Kantor, Megan Twohey, Zoe Kazan, and Carey Mulligan"
  },
  {
    "objectID": "nyff2022/2022-09-30.white-noise/white-noise.html",
    "href": "nyff2022/2022-09-30.white-noise/white-noise.html",
    "title": "White Noise",
    "section": "",
    "text": "See it. It's not really like anything else. Excellent performances. Many striking, unforgettable scenes. The closing credits alone are almost worth the price of admission. My biggest complaint is that the dialogue feels stilted and artificial at times, particularly at the beginning. Maybe it got better or maybe I adjusted. Or maybe it’s intentional; this is a story about people who hide behind words."
  },
  {
    "objectID": "nyff2022/2022-09-30.white-noise/white-noise.html#the-white-noise-people-talking-over-each-other",
    "href": "nyff2022/2022-09-30.white-noise/white-noise.html#the-white-noise-people-talking-over-each-other",
    "title": "White Noise",
    "section": "The \"white noise\" — people talking over each other",
    "text": "The \"white noise\" — people talking over each other\nBaumbach gives us “white noise” in nearly every group scene. At meals, especially, there are many simultaneous conversations. In the discussion after the movie one of the actors described it as “not A-B A-B but A-A-A-A”. In some ways it reminded me of Altman’s layering of sound, but the effect was more confusing. I thought this was a good touch, and it reminded me more than a little of my own family, which can feel like five people having six different conversations, and nobody knows everything that’s being said."
  },
  {
    "objectID": "nyff2022/2022-09-30.white-noise/white-noise.html#thoughts",
    "href": "nyff2022/2022-09-30.white-noise/white-noise.html#thoughts",
    "title": "White Noise",
    "section": "Thoughts",
    "text": "Thoughts\nIn a way almost reminiscent of Wes Anderson, the movie is kind of held aloft by a handful of standout scenes. There’s a dinner scene where Driver’s character demonstrates a combination of denial and bargaining that’s both very funny and all too reminiscent of the way many people behaved in March of 2020. Driver and Cheadle do a tandem lecture in a lecture hall-in-the-round (are there really such things) that was kind of amazing. The final act and the closing credits are probably worth the price of admission.\n\n\n\nDon Cheadle, Greta Gerwig, and Adam Driver"
  },
  {
    "objectID": "nyff2022/2022-10-09.decision-to-leave/decision-to-leave.html",
    "href": "nyff2022/2022-10-09.decision-to-leave/decision-to-leave.html",
    "title": "Decision to Leave",
    "section": "",
    "text": "Thoughts\nI was stunned at the visual composition, cinematography (some shots taken from the perspective of the corpses, great treatments of memories, so, so much more). And a plot with a femme fatale but one who is three-dimensional, not motivated solely by greed. So many metaphors. So much symbolism. This is a 2:18 movie that doesn’t lose your interest for one second.\n\n\n\nDirector Park Chan-Wook and Star Park Hae-il"
  },
  {
    "objectID": "nyff2022/2022-10-02.triangle-of-sadness/triangle-of-sadness.html",
    "href": "nyff2022/2022-10-02.triangle-of-sadness/triangle-of-sadness.html",
    "title": "Triangle of Sadness",
    "section": "",
    "text": "An absurdist satire about a cruise on a super-yacht. It goes over the top in a way reminiscent of Peter Greenaway (there's a lot of vomit). It's an allegory about class, wealth, money, power, and beauty. It could have used a better editor: it's 2:30, and there's 30-45 minutes of material that would not be missed. Woody Harrelson steals the show as the Marxist captain of the yacht.\nShould you see it? Well, if the paragraph above excites you, yes. If you like the movies of Peter Greenaway, yes. If that description doesn't do much for you, if The Cook, The Thief, His Wife, and Her Lover is something you'd rather forget, skip it."
  },
  {
    "objectID": "nyff2022/2022-10-07.bones-and-all/bones-and-all.html",
    "href": "nyff2022/2022-10-07.bones-and-all/bones-and-all.html",
    "title": "Bones and All",
    "section": "",
    "text": "Thoughts\nThere’s definitely a compelling Stephen King vibe here, and (like a few other movies at the festival) a good editor could have made this something good. It would have been so much more cinematic to tell us about the cannibalism without showing the acts themselves. There’s so little art in making the horror explicit."
  },
  {
    "objectID": "nyff2022/2022-10-02.till/till.html",
    "href": "nyff2022/2022-10-02.till/till.html",
    "title": "Till",
    "section": "",
    "text": "Emmett Till's story is an outrage, part of our long dark history of racism. His mother, Mamie Till Mobley, is a hero who fought for justice for her son, and to make sure that his story was told.\nThe movie has some tremendous performances, foremost Danielle Deadwyler's. However it came off as painfully didactic. A worthy subject, but the script does not live up to the material nor to the talents of the cast.\n\n\nSpoilers\n\n\n\nEmmett Till was a 14-year-old African-American boy from Chicago, who went to Mississippi to visit his cousins. While there he was abducted, tortured, and lynched.\nThe movie is Mamie's story, and is largely told from her perspective. The opening scene is a masterful moment for Deadwyler, as we see that a happy sing-a-long she's sharing with Emmett masks her fear for his safety in his upcoming trip to visit his cousins in Money, Mississippi.\nMamie fights for justice for Emmett, using her connections to get his body brought to Chicago, insisting on an open casket, testifying at the trial of his murderers, and fighting for anti-lynching laws."
  },
  {
    "objectID": "nyff2022/2022-10-02.till/till.html#thoughts",
    "href": "nyff2022/2022-10-02.till/till.html#thoughts",
    "title": "Till",
    "section": "Thoughts",
    "text": "Thoughts\nDeadwyler is terrific, and so is Sean Patrick Thomas, Tosin Cole, and many others. These great performances could not mask numerous moments of dialogue that were purely didactic, and often stilted, too.\nPowerful material and great performances, but the stilted lecturing of the dialogue left me thinking I'd have rather spent that time reading about Mamie and Emmett."
  },
  {
    "objectID": "nyff2022/2022-10-08.all-the-beauty-and-the-bloodshed/all-the-beauty-and-the-bloodshed.html",
    "href": "nyff2022/2022-10-08.all-the-beauty-and-the-bloodshed/all-the-beauty-and-the-bloodshed.html",
    "title": "All The Beauty and the Bloodshed",
    "section": "",
    "text": "Thoughts\nI found myself swept away by Goldin’s no-bullshit honesty. She’s led what would be at least three full lives: runaway, artist, AIDS activist, anti-opioids activist. Her life manages to span the Vietnam war, 80’s punk, the AIDS epidemic, the opioid epidemic.\n\n\n\nNan Goldin and Laura Poitras"
  },
  {
    "objectID": "nyff2022/2022-10-01.master-gardener/master-gardener.html",
    "href": "nyff2022/2022-10-01.master-gardener/master-gardener.html",
    "title": "Master Gardener",
    "section": "",
    "text": "I liked it. I don't regret having seen it. Should you see it? Probably. Interesting plot and characters, and some great acting."
  },
  {
    "objectID": "nyff2022/2022-10-01.master-gardener/master-gardener.html#plot",
    "href": "nyff2022/2022-10-01.master-gardener/master-gardener.html#plot",
    "title": "Master Gardener",
    "section": "Plot",
    "text": "Plot\nEdgerton plays the lead horticulturalist at the family estate of Weaver's character. He's a loner, completely dedicated to gardening. Weaver asks him to take on her great-niece as an apprentice. This sends the plot into gear, and we learn that there's more to Edgerton's character\nGreat peformance by Edgerton. Something about him reminded me of Bryan Cranston. He's a man with a past, on a path of redemption.\nSigourney Weaver is fantastic.\nThe narration from the journal of the lonely protagonist trope is used here, which Schrader borrows from himself in Taxi Driver. Roth is no Travis Bickle, but the use of the journal entry as narrative, and the climax features the hero charging into a lair of scummy people to save the girl in a way that seemed more than a bit like Schrader repeating himself."
  },
  {
    "objectID": "2022-08-27.Intro.html",
    "href": "2022-08-27.Intro.html",
    "title": "Introduction",
    "section": "",
    "text": "UX\nI wanted the site to look good, on desktop and on mobile, and be fast and responsive; a static site and something simple were essential.\n\n\nSimple\nI took a hard look at hugo, but it's overkill. It clearly can do everything I would ever want, there's even native support for org mode files. But what I wanted was something with great defaults, minimal setup time, that easily let me use the authoring and scripting tools I'm comfortable with, and I didn't want to spend a zillion hours finding the right theme, learning a sophisticated templating language, that sort of thing. I may go back to hugo one day, if my needs outgrow what I'm using now; the \"stack\" (I am somwehat embarrassed to call my tech selection a stack) is simpler (well, in some sense of that word: it combines tools written in haskell, lua, deno/typescript, python, and dart, and maybe more that I haven't uncovered yet).\n\n\nCost\nI wanted to have good free hosting options. Github pages looks promising."
  }
]